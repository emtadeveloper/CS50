/*
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

operators ::  + for addition  - for subtraction   * for multiplication   / for division   % for remainder

syntactic sugar  :: counter = counter + 1     //  counter ++  //  counter --

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

data Types

bool, a Boolean expression of either true or false  //   8 bits  // 1 byte

char, a single character like a or 2   // 8 bits // 1 byte

double, a floating-point value with more digits than a float   // 64 bits // 8 byte

float, a floating-point value, or real number with a decimal value  // 32 bits  // 4 byte

int, integers up to a certain size, or number of bits   // 32 bits // 4 byte

long, integers with more bits, so they can count higher than an int  // 64 bits   // 4 byte

string, a string of characters    // 32 bits  // 4 byte

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

For printf, too, there are different placeholders for each type, called format codes:

%c for chars

%f for floats or doubles

%i for ints

%li for long integers

%s for strings

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Stores the date in 32 bits and ends in 2038. These bits are called overflow integers.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

تقسیم یک عدد صحیح به یک عدد همیشه برای ما یک عدد صحیح رو بر میگردونه

int 2 / int 3  =  0.000+

برای مثال ما ممکن هستش که بیایم و دو تا عدد اعشاری رو جمع بکنیم که حاصل اون در داخل این ۳۲ بیتی که حافظه به اون اختصاص داده شده جای نگیره و دور ریخته بشه 
و اون عددی که نمایش داده میشه یک ذره متفاوت باشه برای همین باعث یک ذره خطا داخل محاصبات ما بشه  حالا ما میتونیم بیایم و ببینیم که ا ین مقدار ما یک میزان خطایی
رو میتونه داشه باشه برای  همین میتونیم بیایم و اختلاف اون هارو ببینیم کوچک تر از اون هستش یا نه و چک اش بکنیم

const equalDecimalNumber = ( num1,num2 ) =>  ( Math.abs ( num1 - num2 ) < Number.EPSILON * 10 ) 

console.log(equalDecimalNumber(0.3,0.1+0.2))

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

ما برای اینکه بیایم و کیفیت کد خودمون رو بررسی کنیم چند تا پارامتر رو باید بیایم و در نظر بگیریم

1-  آیا کد ما به درستی مشکل رو حل میکند یا خیر
2- آیا کد ما  خوب نوشته شده است و بر اساس میزان کارآمدی و خوانایی آن
3- کد ما از نظر بصری چقد خوب قالب بندی شده است

کامپایلر برنامه ای است که می تواند یک زبان را به زبان دیگر تبدیل کند، مانند کد منبع به کد ماشین

را ارائه می دهد و به ما امکان می دهد به سیستم عامل سرور مجازی، لینوکس دسترسی داشته باشیم CLI ترمینال یک رابط خط فرمان یا  terminal

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
